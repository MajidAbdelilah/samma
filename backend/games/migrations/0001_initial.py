# Generated by Django 4.2.9 on 2025-02-08 20:27

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='name')),
                ('slug', models.SlugField(unique=True, verbose_name='slug')),
                ('description', models.TextField(blank=True, verbose_name='description')),
                ('icon', models.ImageField(blank=True, null=True, upload_to='category_icons/', verbose_name='icon')),
            ],
            options={
                'verbose_name': 'category',
                'verbose_name_plural': 'categories',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Tag',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, verbose_name='name')),
                ('slug', models.SlugField(unique=True, verbose_name='slug')),
            ],
            options={
                'verbose_name': 'tag',
                'verbose_name_plural': 'tags',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Game',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200, verbose_name='title')),
                ('slug', models.SlugField(unique=True, verbose_name='slug')),
                ('description', models.TextField(verbose_name='description')),
                ('price', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='price')),
                ('main_image', models.ImageField(upload_to='game_images/', verbose_name='main image')),
                ('additional_images', models.JSONField(blank=True, default=list, verbose_name='additional images')),
                ('game_file', models.FileField(upload_to='game_files/', verbose_name='game file')),
                ('version', models.CharField(max_length=50, verbose_name='version')),
                ('release_date', models.DateField(verbose_name='release date')),
                ('system_requirements', models.JSONField(verbose_name='system requirements')),
                ('rating', models.DecimalField(decimal_places=2, default=0, max_digits=3, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(10)], verbose_name='rating')),
                ('total_ratings', models.PositiveIntegerField(default=0, verbose_name='total ratings')),
                ('total_sales', models.PositiveIntegerField(default=0, verbose_name='total sales')),
                ('bid_percentage', models.DecimalField(decimal_places=2, default=5.0, max_digits=5, validators=[django.core.validators.MinValueValidator(5.0)], verbose_name='bid percentage')),
                ('ad_score', models.DecimalField(decimal_places=2, default=0, max_digits=10, verbose_name='ad score')),
                ('is_active', models.BooleanField(default=True, verbose_name='is active')),
                ('is_approved', models.BooleanField(default=False, verbose_name='is approved')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='updated at')),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='games', to='games.category', verbose_name='category')),
                ('seller', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='games', to=settings.AUTH_USER_MODEL, verbose_name='seller')),
                ('tags', models.ManyToManyField(related_name='games', to='games.tag', verbose_name='tags')),
            ],
            options={
                'verbose_name': 'game',
                'verbose_name_plural': 'games',
                'ordering': ['-ad_score', '-created_at'],
            },
        ),
        migrations.CreateModel(
            name='GameComment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content', models.TextField(verbose_name='content')),
                ('rating', models.PositiveSmallIntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(10)], verbose_name='rating')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='updated at')),
                ('is_active', models.BooleanField(default=True, verbose_name='is active')),
                ('game', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='comments', to='games.game', verbose_name='game')),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='replies', to='games.gamecomment', verbose_name='parent comment')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='game_comments', to=settings.AUTH_USER_MODEL, verbose_name='user')),
            ],
            options={
                'verbose_name': 'game comment',
                'verbose_name_plural': 'game comments',
                'ordering': ['-created_at'],
                'indexes': [models.Index(fields=['game', '-created_at'], name='games_gamec_game_id_18b81c_idx'), models.Index(fields=['user', '-created_at'], name='games_gamec_user_id_096cd9_idx')],
            },
        ),
        migrations.AddIndex(
            model_name='game',
            index=models.Index(fields=['-ad_score', '-created_at'], name='games_game_ad_scor_645a6d_idx'),
        ),
        migrations.AddIndex(
            model_name='game',
            index=models.Index(fields=['slug'], name='games_game_slug_161310_idx'),
        ),
        migrations.AddIndex(
            model_name='game',
            index=models.Index(fields=['seller'], name='games_game_seller__c71764_idx'),
        ),
    ]
